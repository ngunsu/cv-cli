import click
from os import system
from joblib import Parallel, delayed
from cv_cli.convert import convert

@click.group()
def cli():
    pass


@cli.command()
@click.option('-j', '--jobs', 'jobs', default=-1, help='Numbert of joblib jobs to use for a batch of images')
@click.argument('output_format', nargs=1)
@click.argument('filepath', nargs=-1)
def im2im(filepath, output_format, jobs=-1):
    if len(filepath) == 1:
        convert.im2im(filepath[0], output_format)
    else:
        Parallel(n_jobs=jobs)(delayed(convert.im2im)(path, output_format) for path in filepath)


@cli.command()
@click.option('-f', '--fps', 'fps', required=True, help='Video framerate')
@click.option('-s', '--size', 'size', default='1920x1080', help='Video resolution (def 1920x1080)')
@click.argument('input_images')
@click.argument('output_filename')
def im2mp4(input_images, output_filename, fps, size):
    system(f'ffmpeg -r {fps} -f image2 -s {size} -i {input_images} -vcodec libx264 -crf 25 {output_filename}')



if __name__ == "__main__":
    cli()
